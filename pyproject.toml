# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"



[project]
name = "openschema"
dynamic = ["version"]
description = "Programmatic catalog of public dataset schemas."
readme = "README.md"
license = {text = "Apache License 2.0"}
requires-python = ">=3"
maintainers = [
    {name = "ForML Development Team", email = "info@forml.io"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "forml",
]
[project.optional-dependencies]
dev = [
    "black",
    "flake8-colors",
    "flake8-bugbear",
    "flake8-typing-imports",
    "isort",
    "pip-tools",
    "pre-commit",
    "pycln",
    "pylint",
    "pytest-cov",
    "pytest-xdist",
]
docs = [
    "sphinx",
    "sphinx-copybutton",
    "sphinx_rtd_theme",
    "sphinxcontrib-details-directive",
    "sphinxcontrib-napoleon",
    "sphinxcontrib-spelling",
]
kaggle = ["kaggle"]
sklearn = ["scikit-learn"]
all = []

[project.urls]
Source = "https://github.com/formlio/openschema/"
Documentation = "https://openschema.readthedocs.io/"
Issues = "https://github.com/formlio/openschema/issues/"


# == Hatch ====================================================================
# https://hatch.pypa.io/latest/
[tool.hatch.version]
path = "openschema/__init__.py"

[tool.hatch.envs.default]
[tool.hatch.envs.default.env-vars]
LC_COLLATE = "en_US.UTF-8"
PIP_CONSTRAINT = "constraints.txt"
[tool.hatch.envs.default.scripts]
clean = [
    """rm -vrf \
        .coverage .coverage.* coverage.xml \
        docs/_auto/ docs/_build/ \
        htmlcov/ \
        junit.xml \
        .pytest_cache/""",
    """find {root} \
    \\( \
        -name .git -o \
        -name .idea -o \
        -name .venv \
    \\) -prune -o \
    \\( \
        -type d \
        \\( \
            -name build -o \
            -name .eggs -o \
            -name '*.egg-info' -o \
            -name __pycache__ \
        \\) -prune -o \
        -type f \
        \\( \
            -name '*.log' -o -name '*.log.*' \
        \\) \
    \\) -print -exec rm -rf {{}} \\;""",
]
update = "pip-compile --extra=dev,docs --output-file={env:PIP_CONSTRAINT} --no-emit-index-url --strip-extras --rebuild --upgrade pyproject.toml"

[tool.hatch.envs.dev]
dependencies = [
    "openschema[dev,all]",
]
[tool.hatch.envs.dev.scripts]
lint = [
    "black --check --diff --config=pyproject.toml {args: openschema tests}",
    "isort --check --diff --settings-path=pyproject.toml {args: openschema tests}",
    "pycln --check --diff --config=pyproject.toml {args: openschema tests}",
    "flake8 --config=.flake8 {args: openschema tests}",
    "pylint --rcfile=.pylintrc {args: openschema tests}",
    "sort --check .gitignore",
]
test = "pytest -rxXs --junitxml=junit.xml --cov-config=pyproject.toml --cov=openschema --cov-append --cov-report=term --numprocesses=auto --dist=loadscope {args: openschema tests}"
cov = [
    "coverage xml",
    "coverage html",
]
all = [
    "lint",
    "test",
    "cov",
]

[tool.hatch.envs.docs]
dependencies = [
    "openschema[docs,all]",
]
[tool.hatch.envs.docs.env-vars]
LC_COLLATE = "en_US.UTF-8"
PIP_CONSTRAINT = "constraints.txt"
SPHINXOPTS = "-W"
[tool.hatch.envs.docs.scripts]
check = [
    "make -C docs linkcheck",
    "make -C docs spelling",
    "sort --check docs/spelling_wordlist.txt",
]

[tool.hatch.build.targets.sdist]
include = [
    "/openschema",
]


# == Coverage =================================================================
# https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.run]
branch = true
parallel = false

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]


# == Black ====================================================================
# https://black.readthedocs.io/en/stable/usage_and_configuration/index.html
[tool.black]
line-length = 120
target-version = ["py39", "py310", "py310"]
skip-string-normalization = true


# == Pycln ====================================================================
# https://hadialqattan.github.io/pycln/#/?id=integrations
[tool.pycln]
all = true


# == Isort ====================================================================
# https://pycqa.github.io/isort/docs/configuration/config_files
[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true


# == Pytest ===================================================================
# https://docs.pytest.org/en/latest/reference/customize.html
[tool.pytest.ini_options]
junit_family = "xunit2"
asyncio_mode = "auto"
